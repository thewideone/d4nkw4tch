/*
 * menu_set_date_time.c
 *
 *  Created on: Jun 19, 2021
 *      Author: Szymon Kajda
 */

#include "menu_set_date_time.h"
#include "../bitmaps/arrow_cursor_bitmaps.h"
#include "../oled_lib/ssd1306.h"
#include "../anims/menu_pointers.h"
#include "../button_debounce/buttons.h"
#include "../menus.h"

typedef enum {EMPTY, TIME, DATE, DAY_OF_WEEK} TVALUETOSET;
//typedef enum {NULL, VAL1, VAL2, VAL3, OVF} TCURSORX;	// OVF - overflow

TVALUETOSET value_to_set = EMPTY;

uint8_t menu_cursor_y = 0;
//TCURSORX menu_cursor_x = NULL;
uint8_t menu_cursor_x = 0;

void handleMenuSetDateTime( void ){
	switch (value_to_set) {
		case EMPTY:	// DEFAULT ( USER'S NOT CHANGING VALUE )
			ssd1306_put_int(40, 18, datetime.hh, 1, 1, 0);
			ssd1306_put_int(58, 18, datetime.mm, 1, 1, 0);
			ssd1306_put_int(76, 18, datetime.ss, 1, 1, 0);
			ssd1306_put_int(40, 29, datetime.day, 1, 1, 0);
			ssd1306_put_int(58, 29, datetime.month, 1, 1, 0);
			ssd1306_put_int(76, 29, datetime.year, 1, 1, 0);
			ssd1306_puts(40, 40, days[datetime.dayofweek], 1, 1, 0);

			switch (button) {
				case BOT:
					//button = NONE;
					menu_cursor_y--;
					moveArrowCursorInv(-1);
					break;
				case TOP:
					//button = NONE;
					menu_cursor_y++;
					moveArrowCursorInv(1);
					break;
			}
			break;
		case DATE: // CHANGING DATE
			switch (button) {
				case PRESS:
					//button = NONE;
					menu_cursor_x++;
					break;
			}
			switch (menu_cursor_x) {
				case 1:
					drawDateToSet(1, 0, 1, 0, 0, 1);
					switch (button) {
						case BOT:
							//button = NONE;
							temp_year--;
							break;
						case TOP:
							//button = NONE;
							temp_year++;
							break;
					}
					break;
				case 2:
					drawDateToSet(1, 0, 0, 1, 1, 0);
					switch (button) {
						case BOT:
							//button = NONE;
							temp_month--;
							if (temp_month == 0)
								temp_month = 12;
							break;
						case TOP:
							//button = NONE;
							temp_month++;
							if (temp_month == 13)
								temp_month = 1;
							break;
					}
					break;
				case 3:
					drawDateToSet(0, 1, 1, 0, 1, 0);
					switch (button) {
						case BOT:
							//button = NONE;
							temp_day--;
							if (temp_day == 0)
								temp_day = 31;
							break;
						case TOP:
							//button = NONE;
							temp_day++;
							if (temp_day == 32)
								temp_day = 1;
							break;
					}
					break;
				case 4:
					menu_cursor_x = 0;
					value_to_set = EMPTY;
					DS3231_set_date(temp_year, temp_month, temp_day, temp_day_of_week);
					break;
			}
			break;
		case TIME:	// CHANGING TIME
			switch (button) {
				case PRESS:
					//button = NONE;
					menu_cursor_x++;
					break;
			}
			switch (menu_cursor_x) {
				case 1:
					drawTimeToSet(1, 0, 1, 0, 0, 1);
					switch (button) {
						case BOT:
							temp_ss--;
							if (temp_ss == 0)
								temp_ss = 59;
							break;
						case TOP:
							temp_ss++;
							if (temp_ss == 60)
								temp_ss = 1;
							break;
					}
					break;
				case 2:
					drawTimeToSet(1, 0, 0, 1, 1, 0);
					switch (button) {
						case BOT:
							//button = NONE;
							temp_mm--;
							if (temp_mm == 0)
								temp_mm = 59;
							break;
						case TOP:
							//button = NONE;
							temp_mm++;
							if (temp_mm == 60)
								temp_mm = 1;
							break;
					}
					break;
				case 3:
					drawTimeToSet(0, 1, 1, 0, 1, 0);
					switch (button) {
						case BOT:
							//button = NONE;
							temp_hh--;
							if (temp_hh == 255)
								temp_hh = 23;
							break;
						case TOP:
							//button = NONE;
							temp_hh++;
							if (temp_hh == 24)
								temp_hh = 0;
							break;
					}
					break;
				case 4:
					menu_cursor_x = 0;
					value_to_set = EMPTY;
					DS3231_set_time(temp_hh, temp_mm, temp_ss);
					break;
			}
			break;

		case DAY_OF_WEEK:	// CHANGING DAY OF WEEK
			switch (button) {
				case PRESS:
					//button = NONE;
					menu_cursor_x++;
					break;
			}
			switch (menu_cursor_x) {
				case 1:
					ssd1306_puts(40, 40, days[temp_day_of_week], 1, 0, 1);
					switch (button) {
						case BOT:
							//button = NONE;
							temp_day_of_week--;
							if (temp_day_of_week == 255)
								temp_day_of_week = 6;
							break;
						case TOP:
							//button = NONE;
							temp_day_of_week++;
							if (temp_day_of_week == 7)
								temp_day_of_week = 0;
							break;

					}
					break;
				case 2:
					value_to_set = EMPTY;
					menu_cursor_x = 0;
					DS3231_set_date(temp_year, temp_month, temp_day, temp_day_of_week);
					break;
			}
			break;
	}
	ssd1306_drawBitmap_P(119, menuYPos, arrow_on_left, ARROW_BMP_WIDTH, ARROW_BMP_HEIGHT, 1, 0);
	/*
	switch (button) {
		case PRESS:
			switch (menu_cursor_y) {
				case 0:	// BACK
					gotoMenuApps();
					break;
				case 1:	// SET DAY OF WEEK
					value_to_set = DAY_OF_WEEK;
					break;
				case 2:	// SET DATE
					value_to_set = DATE;
					break;
				case 3:	// SET TIME
					value_to_set = TIME;
					break;
			}
			menu_cursor_x++;
			break;
	}*/
	if( menu_cursor_x == 0 && buttonState() == PRESS ){
		switch (menu_cursor_y) {
			case 0:	// BACK
				gotoMenuApps();
				break;
			case 1:	// SET DAY OF WEEK
				value_to_set = DAY_OF_WEEK;
				break;
			case 2:	// SET DATE
				value_to_set = DATE;
				break;
			case 3:	// SET TIME
				value_to_set = TIME;
				break;
		}
		menu_cursor_x++;
	}
	draw_menu_arrow(119, menuArrowAnimDir, 11);

#ifdef MENU_DATETIME_DEBUG
	char val;
	switch( value_to_set ){
		case EMPTY:
			val = 'E';
			break;
		case TIME:
			val = 'T';
			break;
		case DATE:
			val = 'D';
			break;
		case DAY_OF_WEEK:
			val = 'W';
			break;

	}
	ssd1306_drawChar( 1, 1, val, 1, 0, 1 );
	ssd1306_drawChar( 1, 9, menu_cursor_x+'0', 1, 0, 1 );
	ssd1306_drawChar( 8, 9, menu_cursor_y+'0', 1, 0, 1 );
#endif	/* MENU_DATETIME_DEBUG */
}

void drawDateToSet( uint8_t a, uint8_t b, uint8_t c, uint8_t d, uint8_t e, uint8_t f ){
	ssd1306_put_int( 40, 29, temp_day, 1, a, b );
	ssd1306_put_int( 58, 29, temp_month, 1, c, d );
	ssd1306_put_int( 76, 29, temp_year, 1, e, f );
}

void drawTimeToSet( uint8_t a, uint8_t b, uint8_t c, uint8_t d, uint8_t e, uint8_t f ){
	ssd1306_put_int( 40, 18, temp_hh, 1, a, b );
	ssd1306_put_int( 58, 18, temp_mm, 1, c, d );
	ssd1306_put_int( 76, 18, temp_ss, 1, e, f );
}
